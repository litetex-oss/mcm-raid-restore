plugins {
    id 'fabric-loom' version '1.8.10'
    id 'maven-publish'
    id 'checkstyle'
    id 'org.sonarqube' version '5.1.0.4882'
    id 'com.modrinth.minotaur' version '2.8.7'
}

ext {
    checkstyleVersion = '10.18.2'
    // Derive version from yarn
    minecraft_version = project.yarn_mappings.split("\\+")[0]
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

loom {
    accessWidenerPath = file("src/main/resources/mod.accesswidener")
}

// https://github.com/gradle/gradle/issues/27035
configurations.checkstyle {
    resolutionStrategy.capabilitiesResolution.withCapability("com.google.collections:google-collections") {
        select("com.google.guava:guava:0")
    }
}

dependencies {
    checkstyle "com.puppycrawl.tools:checkstyle:${checkstyleVersion}"
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
}

processResources {
    inputs.property "version", project.version
    inputs.property "minecraft_version", minecraft_version
    inputs.property "loader_version", project.loader_version

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "minecraft_version": minecraft_version,
                "loader_version": project.loader_version
    }
}

checkstyle {
    configDirectory = file("$rootProject.projectDir/.config/checkstyle")
    ignoreFailures false
    showViolations true
    toolVersion = checkstyleVersion
}

tasks.withType(Checkstyle).configureEach {
    enabled = project.hasProperty("checkstyleEnabled");
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

// configure the maven publication
publishing {
    publications {
        create("mavenJava", MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}

tasks.modrinth.dependsOn(tasks.modrinthSyncBody)
// https://github.com/modrinth/minotaur/blob/master/README.md#available-properties
modrinth {
    // token defaults to "MODRINTH_TOKEN" environment variable
    projectId = project.archives_base_name
    // Default/empty value is release
    versionType = System.getenv("MODRINTH_VERSION_TYPE")
    uploadFile = remapJar
    syncBodyFrom = rootProject.file("README.md").text
    changelog = System.getenv("MODRINTH_CHANGELOG_TEXT")
}
